plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1' apply false
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'uk.ac.ebi.atlas'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
//    // For ae-efo-loader
//    // Ideally mavenLocal() would be the last repo to have as fallback, but we won’t have access to our Artifactory
//    // unless we’re on the VPN, in which case the build fails
//    mavenLocal()
//    maven {
//        url "http://45.88.81.166/artifactory/maven-local/"
//        allowInsecureProtocol true
//    }
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.slf4j:slf4j-api'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-math:2.2'
    implementation 'commons-io:commons-io:2.16.1'
    implementation 'io.atlassian.util.concurrent:atlassian-util-concurrent:4.0.1'
    implementation 'com.google.guava:guava'
    implementation 'com.google.code.gson:gson'
    implementation 'com.google.auto.value:auto-value-annotations:1.11.0'
    annotationProcessor 'com.google.auto.value:auto-value:1.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.3.0'
    implementation 'joda-time:joda-time:2.10.10'

    implementation 'au.com.bytecode:opencsv:2.4'

    implementation ('org.apache.solr:solr-core:8.7.0') {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }

//    implementation 'uk.ac.ebi.fg:ae-efo-loader:1.0.5'

    compileOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    // For JUnit 4 tests
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'junit:junit:4.12'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

test {
    useJUnitPlatform()
}